var __getOwnPropNames = Object.getOwnPropertyNames;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};

// dist/index.js
var require_dist = __commonJS({
  "dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var jsxRuntime = require("react/jsx-runtime");
    var sanity = require("sanity");
    var ReferencedBy = (props) => {
      const schema = sanity.useSchema();
      return (
        // eslint-disable-next-line react/jsx-filename-extension
        /* @__PURE__ */ jsxRuntime.jsx("div", {
          children: /* @__PURE__ */ jsxRuntime.jsx(sanity.WithReferringDocuments, {
            id: props.documentId,
            children: (_ref) => {
              let {
                referringDocuments,
                isLoading
              } = _ref;
              if (isLoading) {
                return /* @__PURE__ */ jsxRuntime.jsx("div", {
                  children: "Looking for referring documents..."
                });
              }
              if (!referringDocuments.length)
                return null;
              return /* @__PURE__ */ jsxRuntime.jsx("div", {
                children: referringDocuments == null ? void 0 : referringDocuments.map((document) => {
                  const schemaType = schema.get(document._type);
                  return /* @__PURE__ */ jsxRuntime.jsx("div", {
                    children: schemaType ? /* @__PURE__ */ jsxRuntime.jsx(sanity.IntentButton, {
                      intent: "edit",
                      params: {
                        id: document._id,
                        type: document._type
                      },
                      children: /* @__PURE__ */ jsxRuntime.jsx(sanity.Preview, {
                        value: document,
                        type: schemaType
                      })
                    }) : /* @__PURE__ */ jsxRuntime.jsxs("div", {
                      children: ["A document of the unknown type ", /* @__PURE__ */ jsxRuntime.jsx("em", {
                        children: document._type
                      })]
                    })
                  }, document._id);
                })
              });
            }
          })
        })
      );
    };
    exports.ReferencedBy = ReferencedBy;
  }
});

// <stdin>
require_dist();
